using DatabaseAPI.Account;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;
using UnityEngine.SceneManagement;
public class UIController : MonoBehaviour
{
    private float sayac = 0;
    public TMP_Text timer;
    public TMP_Text highscore;
    bool sayacDevamEdiyorMu = true;
    private float lastcalltime;
    void Start()
    {
        int tempValue;
        AccountController.playerData.TryGetValue(SceneManager.GetActiveScene().buildIndex.ToString(), out tempValue );
        Debug.Log(tempValue);
        highscore.text = (tempValue / 100).ToString("F2");
    }
    public void Ilber()
    {
        StopTimer();
    }
    public void StopTimer()
    {
        sayacDevamEdiyorMu = false;
        float karsilastir;
        karsilastir = PlayerPrefs.GetFloat(SceneManager.GetActiveScene().name + "Highscore");
        if (karsilastir > sayac)
        {
            SetHighscore();
            AccountController.controller.SetStat(SceneManager.GetActiveScene().buildIndex.ToString(), Mathf.RoundToInt(PlayerPrefs.GetFloat(SceneManager.GetActiveScene().name + "Highscore") * 100 ));
        }
        else if (karsilastir <= 0)
        {
            SetHighscore();
            AccountController.controller.SetStat(SceneManager.GetActiveScene().buildIndex.ToString(), Mathf.RoundToInt(PlayerPrefs.GetFloat(SceneManager.GetActiveScene().name + "Highscore") * 100));
            //AccountController.controller.SetStat(PlayerPrefs.GetFloat(SceneManager.GetActiveScene().name + "Highscore").ToString("F2"), SceneManager.GetActiveScene().buildIndex);
        }
    }
    public void SetHighscore()
    {
        PlayerPrefs.SetFloat(SceneManager.GetActiveScene().name + "Highscore", sayac);
        highscore.text = sayac.ToString("F2");
    }
    void arda()
    {
        if (sayacDevamEdiyorMu)
        {
            sayac += Time.deltaTime;
            timer.text = sayac.ToString("F2");
        }
    }
    private void Update()
    {
        if (Time.time - lastcalltime >= 0.2f)
        {
            arda();
        }
    }
}